# Python Executable Package Template

This repository provides a template for creating a self-contained python
projects in the form of an executable python package.

In other words, a package that can be run directly from the command-line as
follows:

    python3 -m packagename

If one wishes to further wrap this package into a zipfile (e.g. package.zip), it
can still be executed without unzipping, as follows:

    PYTHONPATH=package.zip python3 -m packagename

Unit Tests can be run independently by typing:

    python3 -m packagename.tests

The overall structure is as follows:

    packagename
    ├── doc             : Folder containing documentation.
    ├── inputs          : Optional folder containing inputs to package.
    ├── outputs         : Optional folder for collecting outputs.
    ├── res             : Folder containing resources (e.g. images, audio).
    ├── src             : Folder containing all modules used by __main__. 
    ├── tests           : Folder containing all Unit Tests.
    │   └── __main__.py : Unit tests main, for executing tests independently.
    ├── __init__.py     : Package initialisation routine.
    ├── __main__.py     : Main execution block, delegating to other modules.
    ├── CONFIG.ME       : Configuration file.
    ├── LICENSE         : Licence file.
    └── README          : Package's README file.


The template provided is simply a slightly more concretized example of this hierarchy, demonstrating some of the
implementation details that could be taken into consideration when creating your own package. As such, the template
itself is a runnable example, producing nominal output purely for demonstration purposes. However, note that it is still
primarily intended as a template, and its main purpose is to inspect all the files contained and modify as needed.
